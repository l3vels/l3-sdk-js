/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * OpenAPI spec version: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MintInputAsset } from '../model/MintInputAsset';
import { HttpFile } from '../http/http';

export class MintInput {
    /**
    * Contract ID
    */
    'contractId'?: string;
    /**
    * Game ID. Example: Call of Duty
    */
    'gameId': string;
    /**
    * Collection ID to use. Example: Characters, Weapons, etc.
    */
    'collectionId': string;
    /**
    * Player address to mint token to. You can provide player ID or player address
    */
    'playerAddress'?: string;
    /**
    * Player ID to mint to. You can provide player ID or player address
    */
    'playerId'?: string;
    'asset': MintInputAsset;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "contractId",
            "baseName": "contract_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "gameId",
            "baseName": "game_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "collectionId",
            "baseName": "collection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "playerAddress",
            "baseName": "player_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "playerId",
            "baseName": "player_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "asset",
            "baseName": "asset",
            "type": "MintInputAsset",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MintInput.attributeTypeMap;
    }

    public constructor() {
    }
}

