/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * OpenAPI spec version: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Asset {
    /**
    * The unique identifier for the asset entity.
    */
    'id': string;
    /**
    * The token id of the asset.
    */
    'tokenId': number;
    /**
    * The name of the asset.
    */
    'name': string;
    /**
    * ID of the parent asset.
    */
    'parentId': string;
    /**
    * Custom properties of the asset.
    */
    'properties': any;
    /**
    * Custom attributes of the asset.
    */
    'attributes': any;
    /**
    * The description of the asset.
    */
    'description': string;
    /**
    * The status of the asset.
    */
    'status': string;
    /**
    * The price of the asset.
    */
    'price': number;
    /**
    * The supply of the asset.
    */
    'supply': number;
    /**
    * The minted amount of the asset.
    */
    'mintedAmount': number;
    /**
    * The asset type. Can be main or nested.
    */
    'assetType': string;
    /**
    * The asset URL.
    */
    'assetUrl': string;
    /**
    * Additional images associated with the asset, such as screenshots or promotional images.
    */
    'medias': Array<string>;
    /**
    * The main or featured image associated with the asset. You can set it from the Dashboard as main image.
    */
    'mainMedia': string;
    /**
    * The unique identifier of the account that the Collection belongs to.
    */
    'accountId': string;
    /**
    * The unique identifier of the game that the asset is associated with. This allows developers to organize their assets by game and helps with tracking and reporting.
    */
    'gameId': string;
    /**
    * The unique identifier of the collection that the asset is associated with. This allows developers to organize their collections by game and helps with tracking and reporting.
    */
    'collectionId': string;
    /**
    * The date when the collection was created.
    */
    'createdOn': Date;
    /**
    * The date when the collection was last modified.
    */
    'modifiedOn': Date;
    /**
    * The Id of the user who created the collection.
    */
    'createdBy': string;
    /**
    * The Id of the user who last modified the collection.
    */
    'modifiedBy': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "tokenId",
            "baseName": "token_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "parentId",
            "baseName": "parent_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "any",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "any",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": ""
        },
        {
            "name": "supply",
            "baseName": "supply",
            "type": "number",
            "format": ""
        },
        {
            "name": "mintedAmount",
            "baseName": "minted_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "assetType",
            "baseName": "asset_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "assetUrl",
            "baseName": "asset_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "medias",
            "baseName": "medias",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "mainMedia",
            "baseName": "main_media",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountId",
            "baseName": "account_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "gameId",
            "baseName": "game_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "collectionId",
            "baseName": "collection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdOn",
            "baseName": "created_on",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "modifiedOn",
            "baseName": "modified_on",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "createdBy",
            "baseName": "created_by",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifiedBy",
            "baseName": "modified_by",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Asset.attributeTypeMap;
    }

    public constructor() {
    }
}

