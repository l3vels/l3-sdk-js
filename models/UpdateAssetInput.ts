/* tslint:disable */
/* eslint-disable */
/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateAssetInput
 */
export interface UpdateAssetInput {
    /**
     * The name of the asset.
     * @type {string}
     * @memberof UpdateAssetInput
     */
    name?: string;
    /**
     * The story of asset.
     * @type {string}
     * @memberof UpdateAssetInput
     */
    description?: string;
    /**
     * Price of asset
     * @type {number}
     * @memberof UpdateAssetInput
     */
    price?: number;
    /**
     * Supply of asset
     * @type {number}
     * @memberof UpdateAssetInput
     */
    supply?: number;
    /**
     * Asset URL
     * @type {string}
     * @memberof UpdateAssetInput
     */
    assetUrl?: string;
    /**
     * Custom props for asset.
     * @type {object}
     * @memberof UpdateAssetInput
     */
    customProps?: object;
    /**
     * Collection ID to find and update the asset in. Example: Update AK-47 asset in Weapons collection.
     * @type {string}
     * @memberof UpdateAssetInput
     */
    collectionId: string;
    /**
     * Game ID to update the asset in. Example: Call of Duty
     * @type {string}
     * @memberof UpdateAssetInput
     */
    gameId: string;
}

/**
 * Check if a given object implements the UpdateAssetInput interface.
 */
export function instanceOfUpdateAssetInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "collectionId" in value;
    isInstance = isInstance && "gameId" in value;

    return isInstance;
}

export function UpdateAssetInputFromJSON(json: any): UpdateAssetInput {
    return UpdateAssetInputFromJSONTyped(json, false);
}

export function UpdateAssetInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAssetInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'supply': !exists(json, 'supply') ? undefined : json['supply'],
        'assetUrl': !exists(json, 'asset_url') ? undefined : json['asset_url'],
        'customProps': !exists(json, 'custom_props') ? undefined : json['custom_props'],
        'collectionId': json['collection_id'],
        'gameId': json['game_id'],
    };
}

export function UpdateAssetInputToJSON(value?: UpdateAssetInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'price': value.price,
        'supply': value.supply,
        'asset_url': value.assetUrl,
        'custom_props': value.customProps,
        'collection_id': value.collectionId,
        'game_id': value.gameId,
    };
}

