/* tslint:disable */
/* eslint-disable */
/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Collection
 */
export interface Collection {
    /**
     * The unique identifier for the collection entity.
     * @type {string}
     * @memberof Collection
     */
    id: string;
    /**
     * The unique identifier that can be provided by game studio.
     * @type {string}
     * @memberof Collection
     */
    uniqueId: string;
    /**
     * The name of the collection.
     * @type {string}
     * @memberof Collection
     */
    name: string;
    /**
     * A brief description of the collection.
     * @type {string}
     * @memberof Collection
     */
    description: string;
    /**
     * An image representing the collection's logo.
     * @type {string}
     * @memberof Collection
     */
    logoImage: string;
    /**
     * Additional images associated with the collection, such as screenshots or promotional images.
     * @type {Array<string>}
     * @memberof Collection
     */
    medias: Array<string>;
    /**
     * The main or featured image associated with the game. You can set it from the dashboard as main image.
     * @type {string}
     * @memberof Collection
     */
    mainMedia: string;
    /**
     * A unique URL for the collection on the L3vels platform.
     * @type {string}
     * @memberof Collection
     */
    url: string;
    /**
     * A URL link to the collection's webpage.
     * @type {string}
     * @memberof Collection
     */
    webLink: string;
    /**
     * The supply represents the number of assets that are available within the Collection.
     * @type {number}
     * @memberof Collection
     */
    supply: number;
    /**
     * Custom properties that are unique to the collection and defined by the developer to categorize and filter them.
     * @type {object}
     * @memberof Collection
     */
    customPropertyProps: object;
    /**
     * Additional social links associated with the collection
     * @type {Array<string>}
     * @memberof Collection
     */
    socialLinks: Array<string>;
    /**
     * Custom assets fields associated with the collection.
     * @type {object}
     * @memberof Collection
     */
    customAssetProps: object;
    /**
     * The category or categories that the collection belongs to.
     * @type {object}
     * @memberof Collection
     */
    categories: object;
    /**
     * The current status of the collection. Possible values are: Draft, Active
     * @type {string}
     * @memberof Collection
     */
    status: string;
    /**
     * The unique identifier of the account that the Collection belongs to.
     * @type {string}
     * @memberof Collection
     */
    accountId: string;
    /**
     * The unique identifier of the game that the collection is associated with. This allows developers to organize their collections by game and helps with tracking and reporting.
     * @type {string}
     * @memberof Collection
     */
    gameId: string;
    /**
     * The date when the collection was created.
     * @type {Date}
     * @memberof Collection
     */
    createdOn: Date;
    /**
     * The date when the collection was last modified.
     * @type {Date}
     * @memberof Collection
     */
    modifiedOn: Date;
    /**
     * The Id of the user who created the collection.
     * @type {string}
     * @memberof Collection
     */
    createdBy: string;
    /**
     * The Id of the user who last modified the collection.
     * @type {string}
     * @memberof Collection
     */
    modifiedBy: string;
}

/**
 * Check if a given object implements the Collection interface.
 */
export function instanceOfCollection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "uniqueId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "logoImage" in value;
    isInstance = isInstance && "medias" in value;
    isInstance = isInstance && "mainMedia" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "webLink" in value;
    isInstance = isInstance && "supply" in value;
    isInstance = isInstance && "customPropertyProps" in value;
    isInstance = isInstance && "socialLinks" in value;
    isInstance = isInstance && "customAssetProps" in value;
    isInstance = isInstance && "categories" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "gameId" in value;
    isInstance = isInstance && "createdOn" in value;
    isInstance = isInstance && "modifiedOn" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "modifiedBy" in value;

    return isInstance;
}

export function CollectionFromJSON(json: any): Collection {
    return CollectionFromJSONTyped(json, false);
}

export function CollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Collection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'uniqueId': json['unique_id'],
        'name': json['name'],
        'description': json['description'],
        'logoImage': json['logo_image'],
        'medias': json['medias'],
        'mainMedia': json['main_media'],
        'url': json['url'],
        'webLink': json['web_link'],
        'supply': json['supply'],
        'customPropertyProps': json['custom_property_props'],
        'socialLinks': json['social_links'],
        'customAssetProps': json['custom_asset_props'],
        'categories': json['categories'],
        'status': json['status'],
        'accountId': json['account_id'],
        'gameId': json['game_id'],
        'createdOn': (new Date(json['created_on'])),
        'modifiedOn': (new Date(json['modified_on'])),
        'createdBy': json['created_by'],
        'modifiedBy': json['modified_by'],
    };
}

export function CollectionToJSON(value?: Collection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'unique_id': value.uniqueId,
        'name': value.name,
        'description': value.description,
        'logo_image': value.logoImage,
        'medias': value.medias,
        'main_media': value.mainMedia,
        'url': value.url,
        'web_link': value.webLink,
        'supply': value.supply,
        'custom_property_props': value.customPropertyProps,
        'social_links': value.socialLinks,
        'custom_asset_props': value.customAssetProps,
        'categories': value.categories,
        'status': value.status,
        'account_id': value.accountId,
        'game_id': value.gameId,
        'created_on': (value.createdOn.toISOString()),
        'modified_on': (value.modifiedOn.toISOString()),
        'created_by': value.createdBy,
        'modified_by': value.modifiedBy,
    };
}

