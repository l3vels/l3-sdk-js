/* tslint:disable */
/* eslint-disable */
/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Asset } from './Asset';
import {
    AssetFromJSON,
    AssetFromJSONTyped,
    AssetToJSON,
} from './Asset';

/**
 * 
 * @export
 * @interface AssetsResponse
 */
export interface AssetsResponse {
    /**
     * Number of assets to return per page
     * @type {Array<Asset>}
     * @memberof AssetsResponse
     */
    items: Array<Asset>;
    /**
     * Number of total items
     * @type {number}
     * @memberof AssetsResponse
     */
    total: number;
    /**
     * Number of items to return per page
     * @type {number}
     * @memberof AssetsResponse
     */
    limit: number;
    /**
     * Page number
     * @type {number}
     * @memberof AssetsResponse
     */
    page: number;
}

/**
 * Check if a given object implements the AssetsResponse interface.
 */
export function instanceOfAssetsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "limit" in value;
    isInstance = isInstance && "page" in value;

    return isInstance;
}

export function AssetsResponseFromJSON(json: any): AssetsResponse {
    return AssetsResponseFromJSONTyped(json, false);
}

export function AssetsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(AssetFromJSON)),
        'total': json['total'],
        'limit': json['limit'],
        'page': json['page'],
    };
}

export function AssetsResponseToJSON(value?: AssetsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(AssetToJSON)),
        'total': value.total,
        'limit': value.limit,
        'page': value.page,
    };
}

