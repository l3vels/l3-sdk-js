/* tslint:disable */
/* eslint-disable */
/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.1
 * Contact: games@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlayerAsset
 */
export interface PlayerAsset {
    /**
     * The unique identifier for the Player asset entity.
     * @type {string}
     * @memberof PlayerAsset
     */
    id: string;
    /**
     * The amount of the specific asset that the player has.
     * @type {number}
     * @memberof PlayerAsset
     */
    amount: number;
    /**
     * The unique identifier of the player that the asset is associated with.
     * @type {string}
     * @memberof PlayerAsset
     */
    playerId: string;
    /**
     * The unique identifier of the asset that the asset is associated with.
     * @type {string}
     * @memberof PlayerAsset
     */
    assetId: string;
    /**
     * The unique identifier of the collection that the Player asset is associated with.
     * @type {string}
     * @memberof PlayerAsset
     */
    collectionId: string;
    /**
     * The unique identifier of the account that the Player belongs to.
     * @type {number}
     * @memberof PlayerAsset
     */
    accountId: number;
    /**
     * The unique identifier of the project that the Player is associated with. This allows developers to organize their players by project and helps with tracking and reporting.
     * @type {string}
     * @memberof PlayerAsset
     */
    projectId: string;
    /**
     * The date when the player was created.
     * @type {Date}
     * @memberof PlayerAsset
     */
    createdOn: Date;
    /**
     * The date when the player was last modified.
     * @type {Date}
     * @memberof PlayerAsset
     */
    modifiedOn: Date;
    /**
     * The Id of the user who created the player.
     * @type {number}
     * @memberof PlayerAsset
     */
    createdBy: number;
    /**
     * The Id of the user who last modified the player.
     * @type {number}
     * @memberof PlayerAsset
     */
    modifiedBy: number;
}

/**
 * Check if a given object implements the PlayerAsset interface.
 */
export function instanceOfPlayerAsset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "playerId" in value;
    isInstance = isInstance && "assetId" in value;
    isInstance = isInstance && "collectionId" in value;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "createdOn" in value;
    isInstance = isInstance && "modifiedOn" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "modifiedBy" in value;

    return isInstance;
}

export function PlayerAssetFromJSON(json: any): PlayerAsset {
    return PlayerAssetFromJSONTyped(json, false);
}

export function PlayerAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerAsset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'amount': json['amount'],
        'playerId': json['player_id'],
        'assetId': json['asset_id'],
        'collectionId': json['collection_id'],
        'accountId': json['account_id'],
        'projectId': json['project_id'],
        'createdOn': (new Date(json['created_on'])),
        'modifiedOn': (new Date(json['modified_on'])),
        'createdBy': json['created_by'],
        'modifiedBy': json['modified_by'],
    };
}

export function PlayerAssetToJSON(value?: PlayerAsset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'amount': value.amount,
        'player_id': value.playerId,
        'asset_id': value.assetId,
        'collection_id': value.collectionId,
        'account_id': value.accountId,
        'project_id': value.projectId,
        'created_on': (value.createdOn.toISOString()),
        'modified_on': (value.modifiedOn.toISOString()),
        'created_by': value.createdBy,
        'modified_by': value.modifiedBy,
    };
}

